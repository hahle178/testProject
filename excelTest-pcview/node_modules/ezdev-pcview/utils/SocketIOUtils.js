/**
 * Created by lhw on 2017/11/03.
 * --------------------
 * - SocketIO的辅助工具类 -
 * --------------------
 */
import MiscUtils from "./MiscUtils";

export default{
    miscUtils:MiscUtils,
    inited:false,
    socketio:undefined,
    ticketIds:undefined,
    init: function () {
        if(this.inited){
            return;
        }

        console.log("[SOCKET.IO]初始化");

        this.ticketIds = new Array();
        this.socketio = io(':90');
        //当收到对用户id的询问时，回复用户id
        this.socketio.on("askUser", function(){

            var userid = this.miscUtils.getInstance('userid');
            console.log("[SOCKET.IO][receive-askUser] userid:"+userid);
            if(!userid){
                console.log("[SOCKET.IO][regist init-user-answer]");
                window.ezdev.addEvent("initializedUser", function(user){
                    this.miscUtils.setInstance('userid',user.account);
                    this.socketio.emit('answerUser',user.account);
                    console.log("[SOCKET.IO][answerUser after-init-user] userid:"+user.account);
                }.bind(this));
            }else{
                this.socketio.emit('answerUser',userid);
                console.log("[SOCKET.IO][answerUser immediate] userid:"+userid);
            }
        }.bind(this));

        //当收到推送过来的消息时，触发事件
        this.socketio.on("ezdev-push-message", function(msg){

            console.log("[SOCKET.IO]收到普通消息");

            //一旦有推送来的消息，解析消息，触发相应的页面响应事件
            if(msg.pms){

                //重复消息检测
                var idIndex = $.inArray(msg.id, this.ticketIds);
                if( idIndex > -1 ){//服务端未收到回执导致服务端重复发送的消息
                    console.debug("[推送消息到达][服务端未收到回执导致服务端重复发送的消息]："+msg.id);
                    //为了尽量使服务端不走最大数量的重发，发送回执。
                    this.socketio.emit('arriveReceipt',msg.id);
                    console.debug("[推送消息到达][已发送回执]："+msg.id);
                    return;
                }else{
                    console.debug("[推送消息到达][浏览器第一次收到的消息]："+msg.id);
                    this.ticketIds.push(msg.id);//浏览器第一次收到的消息
                    if(this.ticketIds.length > 1000){//长度超过1000后，删除旧数据
                        this.ticketIds.shift();
                    }
                    //发送回执
                    this.socketio.emit('arriveReceipt',msg.id);
                    console.debug("[推送消息到达][已发送回执]："+msg.id);
                }


                for(var i=0; i<msg.pms.length; i++){
                    var aMsg = msg.pms[i];
                    //如果是通知类消息，触发通知消息到达事件，告知相应的页面监听
                    if(aMsg.title.indexOf("notice") == 0){
                        window.ezdev.fireEvent('noticeMsgArrived',msg);
                        break;
                    }
                    //如果是告警类消息，触发通知消息到达事件，告知相应的页面监听
                    if(aMsg.title.indexOf("warn") == 0){
                        window.ezdev.fireEvent('warnMsgArrived',msg);
                        break;
                    }
                    //如果是任务类消息，触发通知消息到达事件，告知相应的页面监听
                    if(aMsg.title.indexOf("task") == 0){
                        window.ezdev.fireEvent('taskMsgArrived',msg);
                        break;
                    }
                    //如果是自定义推送类消息，触发通知消息到达事件，告知相应的页面监听
                    if(aMsg.title.indexOf("custompush") == 0){
                        window.ezdev.fireEvent('custompushMsgArrived',msg);
                        break;
                    }
                }
            }

        }.bind(this));

        this.inited = true;
        return this;
    }
};