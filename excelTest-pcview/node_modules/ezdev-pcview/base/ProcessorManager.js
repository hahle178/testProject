/**
 * Created by zhaofs on 2018/01/27.
 * --------------------------------
 * - 处理分析器管理器 -
 * --------------------------------
 *  主要实现对处理对象的管理
 */

import Processor from "./Processor"

export default class {
    constructor() {
        this._pm = new Map();
    }

    /**
     * 添加处理器
     * @param processor
     */
    add(processor) {
        if (processor instanceof Array) {
            this.addArray(processor);
        } else if (processor) {
            this.addOne(processor)
        }
    }

    /**
     * 添加多个处理器
     * @param processors
     */
    addArray(processors) {
        if (processors && processors instanceof Array) {
            processors.forEach((processor) => {
                this.addOne(processor)
            });
        }
    }

    /**
     * 添加单个处理器
     * @param processor
     */
    addOne(processor) {
        if (processor instanceof Processor) {
            if (this._pm.has(processor.name)) {
                console.warn(`同名处理器[${processor.name}]已存在，将被覆盖！`);
            }
            this._pm.set(processor.name, processor);

        } else {
            throw new Error("只能添加Processor类型！");
        }
    }

    /**
     * 设置相应值
     * @param key
     * @param value
     */
    set(key,value){
        this._pm.set(key, value);
    }

    /**
     * 得到处理器
     * @param name
     * @returns {V} 处理器
     */
    get (name) {
        return this._pm.get(name)
    }

    /**
     * 获取所有处理器
     */
    getAll() {
        return this._pm;
    }

    /**
     * 是否存在
     * @param name
     * @returns {boolean}
     */
    isExist(name) {
        return this._pm.has(name);
    }

}