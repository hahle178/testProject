/**
 * Created by zhaofs on 2017/12/21.
 * --------------------
 * - 模块导入接口 -
 * --------------------
 * 模块导入接口，由具体模块实现此接口
 */

import modulesManager from "./ModulesManager";

export default class {
    constructor(options) {
        Object.assign(this, options);

        //验证模块名称是否设置
        if (!this.name) {
            throw new Error("模块属性中没有设置name属性");
        }

        //把模块添加到模块管理中
        modulesManager.add(this);
    }

    /**
     * 初始化应用配置
     * @param config
     */
    initConfig(config){

    }

    /**
     * 初始化模块，当Application初始化完成后被调用
     * @param app 全局应用对象，在此对象中能获取应用程序上下文信息
     */
    initModule(app) {

    }

    /**
     * 添加缓存项
     * @param cacheManager
     */
    addCache(cacheManager) {

    }

    /**
     * 添加主界面右上角导航栏
     * @param navbarContainer 右上角导航栏容器，可通过调用navbarContainer.add方法添加自定义导航栏
     */
    addNavbar(navbarContainer) {

    }

    /**
     * 静态导入Handler,需要在实现类中实现此方法，并返回Handler映射关系JSON对象如：
     * {"system/user":new XXHandler()}
     */
    staticImportHandler() {
        return null;
    }

    /**
     * 动态导入handler。
     */
    dynamicImportHandler(path) {

    }

    get name() {
        return this._name;
    }

    set name(value) {
        this._name = value;
    }

};