/**
 * Created by zhaofs on 2017/5/6.
 * --------------------
 * - Handle管理 -
 * --------------------
 * 实现对Handle统一管理
 */
import modulesManager from "../base/ModulesManager";

let handlers = {};
export default {
    /**
     * 注册Handler
     */
    addHandler: function (path, handler) {
        path = path.indexOf("/") === 0 ? path.substring(1) : path;
        handlers[path] = handler;
    },

    /**
     * 获取Handler
     * @param path
     * @returns {*}
     */
    resolveHandler: function (path) {
        return new Promise((resolve) => {
            let handler = handlers[path];
            if (handler) {
                resolve(handler);
            } else {
                let index = path.indexOf("/"), moduleName = index > 0 ? path.substring(0, index) : path;
                if (modulesManager.isExist(moduleName)) {
                    modulesManager.get(moduleName).dynamicImportHandler(path.substring(index + 1)).then(function (handler) {
                        if (typeof handler.default === "function") {
                            handlers[path] = new handler.default();
                            resolve(handlers[path]);
                        } else {
                            handlers[path] = handler.default;
                            resolve(handler.default);
                        }
                    });
                } else {
                    console.error(`无法找到名为[${moduleName}]的模块！`)
                }
            }
        });
    },

    /**
     * 是否已经存在
     * @param path
     */
    isExist: function (path) {
        return !!handlers[path];
    },

    /**
     * 静态导入Handler对象
     * @param handlers
     */
    staticImport: function (handlers) {
        //声明式注册Handler
        if (typeof(handlers) === "object") {
            for (let key in handlers) {
                this.addHandler(key, handlers[key])
            }
        } else {
            throw new Error("调用HandlerManager中staticImport方法错误请传递键值对对象如：{'system/dictionary': dictionary }！");
        }
    },

    /**
     * 静态导入Handler对象
     * @param name handler名称
     * @param handler
     */
    staticImportByName: function (name, handler) {
        this.addHandler(name, handler)
    }
};