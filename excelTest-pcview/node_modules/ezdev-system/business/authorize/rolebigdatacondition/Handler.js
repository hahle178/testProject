import Handler from "ezdev-pcview/handler/BaseHandler";
import Table from "ezdev-pcview/components/table/Table";

export default class extends Handler {


    resolveTpl(tpl) {
        return require("./tpl/" + tpl + ".html");
    }


    indexAfter() {

        this.options = {
            roleListTpl: 'roles',
            roleListId: `${this.mcid}_roles`,
            roleListUrl: 'system/core/role/list',
            conditionListTpl: 'conditions',
            conditionListId: `${this.mcid}_conditions`,
            conditionListUrl: 'system/condition/list',
            levelListTpl: 'levels',
            levelListId: `${this.mcid}_levels`,
            map: {},
            selectedRole: {}
        };
        this.initRoleList();
    }

    initRoleList() {

        let args = {
            contentId: this.options.roleListId,
            data: "search_LIKE_name=&page=1",
            form: `${this.mcid}_searchForm`,
            tpl: this.options.roleListTpl,
            url: this.options.roleListUrl
        };

        $('.pagination2').jqPagination({
            current_page: 1,
            max_page: 1,
            page_string: '第{current_page}页,共{max_page}页',
            paged: (page) => {
                $(`#${this.mcid}_page`).val(page);
                this.searchRoles(args).then(() => {
                    $(`#${this.options.roleListId} tr:first`).click();
                });
            }
        });
    }

    searchRolesAfter() {

        $(`#${this.options.roleListId} tr:first`).click();
    }

    searchRoles(args) {

        args.form = `${this.mcid}_searchForm`;
        if (args.url) {
            args.contentId = this.options.roleListId;
            let form = $(`#${args.form}`);
            if (form.length > 0) {
                args.data = form.serialize();
                args.tpl = this.options.roleListTpl;
                return this.render(args).then((data) => {
                    let maxpage = parseInt(data.data.totalPages);
                    let curpage = parseInt(data.data.pageNum);
                    $(".pagination2").jqPagination("option", {
                        max_page: maxpage,
                        current_page: curpage,
                        trigger: false
                    });
                });
            } else {
                throw new Error("参数无效，DOM中无法找到id为[" + args.form + "]的Form！");
            }

        } else {
            throw new Error("参数无效，请传递如{url:/demo/mybatisuser/pages-(必选),type:post-(默认),tpl:list-(默认),contentId:list-(默认)}的JS对象");
        }
    }

    searchConditions(args) {

        args.objid = this.currentRoleId;
        args.objname = this.currentRoleName;
        this.selRole(args);

    }

    backToLevel(args){


        this.selRole({url:`/system/core/role/get/${this.options.selectedRole.id}`});
        $(`#${this.mcid}_bindLevel`).show();
        $(`#${this.mcid}_bindConditions`).hide();
    }

    selLevel(args){

        this.getAllConditions().then(() => {

            let roleid = args.objid;

            // 清除选中记录
            this.options.map = {};

            let ids = this.options.map;

            if (roleid) {
                let url = `system/core/role/bigdataconditionsbyroleid/${roleid}`;
                $.ajax({
                    cache: false,
                    async: false,// 同步加载
                    type: "GET",
                    url: url,
                    dataType: "json",
                    success: (data) => {

                        if (data.data.length > 0) {

                            for (let i = 0; i < data.data.length; i++) {

                                $(`#${data.data[i].id}`).attr('checked', true);
                                ids[data.data[i].id] = data.data[i].id;
                            }

                        }

                        $(`#${this.mcid}_bindLevel`).hide();
                        $(`#${this.mcid}_bindConditions`).show();
                    }
                });
            }

        });
    }

    selRole(args) {


        let levelArgs = {
            tpl: this.options.levelListTpl,
            contentId: this.options.levelListId,
            // data: {data: {bigDataType: args.bigDataType, id: args.objid, name: args.objname}}
            url:args.url,
            type: "get"
        };

        this.render(levelArgs).then((data) => {

                this.options.selectedRole = {id:data.data.id};


                this.currentRoleId = data.data.id;
                this.currentRoleName = data.data.name;

                let roleid = data.data.id;
                let rolename = data.data.name;

                //点击过后的tr变成蓝色，其他tr恢复原色
                $(`#${roleid}`).addClass("active").siblings().removeClass('active');

                if (!roleid) {
                    $(`#${this.mcid}_btnSure`).attr('disabled', true);
                } else {
                    $(`#${this.mcid}_btnSure`).attr('disabled', false);
                }

                $(`#${this.mcid}_currentRoleId`).val(roleid);
                $(`#${this.mcid}_currentRoleName`).text(rolename);

                $(`#${this.mcid}_bindLevel`).show();
                $(`#${this.mcid}_bindConditions`).hide();
        });



    }

    /**
     * 取消按钮
     */
    bindReset() {

        this.getAllConditions().then(()=>{

            this.selLevel({objid:this.options.selectedRole.id})
        });
        // this.selRole({url:`/system/core/role/get/${this.options.selectedRole.id}`});
    }

    resetLevel() {

        this.selRole({url:`/system/core/role/get/${this.options.selectedRole.id}`});
    }

    /**
     * 获取全部数据表
     */
    getAllConditions() {
        let args = {
            tpl: this.options.conditionListTpl,
            url: this.options.conditionListUrl,
            contentId: this.options.conditionListId
        };
        return this.search(args);
    }

    /**
     * 提交保存
     */
    bindConditions() {

        let conditions = '';

        $('table input[type="checkbox"]').each(function () {

            if ($(this).prop("checked")) {

                conditions += $(this).val() + ',';
            }
        })

        let roleId = this.options.selectedRole.id;

        let param = {"roleid": roleId, "conditionsid": conditions};
        let url = "system/core/authorize/bindrolebigdataconditions";
        $.ajax({
            cache: false,
            data: param,
            type: "POST",
            url: url,
            dataType: "json",
            success: (data) => {
                this.initRoleList();
            }
        });
    }

    /**
     * 实现查询功能
     * @param args
     * {url:/demo/mybatisuser/pages-(必选),type:post-(默认),tpl:list-(默认),contentId:list-(默认)}
     */
    search(args) {
        args.form = `${this.mcid}_conditionForm`;
        if (args.url) {

            let form = $(`#${args.form}`);

            if (form.length > 0) {

                args.data = form.serialize();

                return this.render(args).then((data) => {
                    new Table({
                        pageNum: data.data.pageNum,
                        totalPages: data.data.totalPages,
                        totalSize: data.data.totalSize,
                        pageSize: data.data.pageSize,
                        buttonClickCallback: this.search.bind(this, args)
                    });
                });
            } else {
                throw new Error("参数无效，DOM中无法找到id为[" + args.form + "]的Form！");
            }
        } else {
            throw new Error("参数无效，请传递如{url:/demo/mybatisuser/pages-(必选),type:post-(默认),tpl:list-(默认),contentId:list-(默认)}的JS对象");
        }
    }

    saveLevel(args){

        let type = $('[name="type"]:checked').val();
        let url = `system/core/role/bigdatatype/${this.options.selectedRole.id}/${type}`;
        $.ajax({
            cache: false,
            type: "GET",
            url: url,
            dataType: "json",
            success: (data) => {
                this.initRoleList();
            }
        });
    }
}