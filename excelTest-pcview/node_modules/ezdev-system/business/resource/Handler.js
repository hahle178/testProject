/**
 * Created by zhaofs on 2017/5/6.
 * 演示Handler应用
 */
import Handler from "ezdev-pcview/handler/Handler";

export default new Handler({
    resolveTpl: function (tpl) {
        return require("./tpl/" + tpl + ".html");
    },
    initHandler: function () {
        this.options = {
            treeId: 'tree_id',
            listId: 'list',
            pageId: 'pager',
            searchFormId: 'form',
            saveFormId: 'submitForm',
            contentId: 'content',
            detailId: 'resourceDetail',
            findTree: "system/core/resource/list",
            detailTree: "system/core/resource/get/",
            bizSysDetailTree: "system/core/bizsys/get/",
            getResourceType: "system/core/resource/getResourceType",
            divResourceIconId: "resourceIcon",
            typeOperation: "typeOperation",
            typeSelectId: "selType",
            typeHidenIdInSave: "resType",
            iconChooserId: "iconChooser",
            orguserTreeId: 'orguserTree',
            orguserTreeUrl: 'system/core/user/orgusertree',
            roleListId: 'rolelistbind',
            roleListUrl: 'system/core/role/list',
            map: {},
            selectedRescId: "",
            selectedFieldId: "",
            fieldElement: null,
            ruleElement: null,
            rangeUrl: "",
            structure: ""
        };
    },
    getAjaxUrl: function (args) {
        var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
        var checkedNode = zTree.getSelectedNodes();
        var ajaxurl = "system/core/resource/checkRescCode?bizsysid=" + checkedNode[0].bizsysId + "&id=";
        $("#zybm").attr("ajaxUrl", ajaxurl);
    },
    iconChooserIds: function (args) {

        let layerId = layer.open({
            shade: 0,
            zIndex: 9999999,
            type: 1,
            shade: 0.3,
            move: args.move,
            title: args.title || '选择图标',
            area: [args.width || '50%', args.height || '55%'] //宽高
        });
        args.contentId = $('#layui-layer' + layerId).find('.layui-layer-content');

        //promise = this.render(args);

        args.tpl = "iconList";

        this.render(args);

        //var createHtml = template('system/core/resource/iconList',{});

        var selectedIcon = $('[name=icon]').val();
        if (selectedIcon != "") {
            $('.the-icons li').each(function () {
                if (selectedIcon == $(this).text()) {
                    $(this).addClass("icon-selected").siblings().removeClass("icon-selected");
                    $('.modal-body').scrollTop($(this).position().top);
                }
            });
        }

        $(".the-icons li").click(function () {
            $(this).addClass("icon-selected").siblings().removeClass("icon-selected");

            selectedIcon = $(this).text();

        });

        $(".btn-sure").click(function () {

            $('[name=icon]').val(selectedIcon);
            layer.closeAll()
        });
        $(".btn-cancel").click(function () {
            layer.closeAll()
        });

    },
    /*
     * 20170926suntf
     * */
    onSubmited: function (data) {
        let errSize = $(".has-error").length;
        if (errSize < 1) {
            //添加完毕后，重新展开树
            this.initTree();
            let zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
            var node = {};
            let nodeId = $("#submitForm #id").val();
            if (nodeId != "") {//编辑
                node = zTree.getNodeByParam("id", nodeId);
            } else {//新建
                let zybm = $("#zybm").val();
                let pId = $("#parentId").val();
                let parentNode = zTree.getNodeByParam("id", pId);
                node = zTree.getNodeByParam("code", zybm, parentNode)
            }
            zTree.selectNode(node, false);//选择节点
            zTree.expandNode(node, true, false, false);
            this.triggerOperation(node);//查看详情
        }
    },
    goBack: function (args) {
        let zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
        var nodes = zTree.getSelectedNodes();
        var nodeid = nodes[0].id;
        var nodetype = nodes[0].type;
        zTree.selectNode(nodes[0], false);//选择节点
        this.triggerOperation(nodes[0]);

    },
    onAdded: function (args) {//新建操作

        var treeObj = $.fn.zTree.getZTreeObj(this.options.treeId);
        var node = treeObj.getSelectedNodes();
        ///*alert(node[0].typeplus);*/
        $("#parentId").val(node[0].id);
        $("#parentName").val(node[0].name);
        $("#bizSysId").val(node[0].bizsysId);
        $("#parentName").attr("readonly", true);

        if (node[0].getParentNode().id == "0") {
            $("#caozuo").hide();
            $("#anniu").hide();
            $("#qita").hide();
        }

        if (node[0].typeplus == "2") {
            $("#caidan").hide();
            $("#anniu").hide();
        }


    },
    /*
     * 20170927suntf
     * */
    onEdited: function () {
        this.judge();
    },
    editasd: function () {
        $("#" + this.options.saveFormId + " #pxbh").attr("disabled", false);
        $("#" + this.options.saveFormId + " #id").attr("disabled", false);
        $("#" + this.options.saveFormId + " #code").attr("disabled", false);
        $("#" + this.options.saveFormId + " #bizSysId").attr("disabled", false);
        $("#" + this.options.saveFormId + " #parentId").attr("disabled", false);
        $("#yincang").hide();
        $("#optDiv").hide();
        $("#btnDiv").show();
        $("#tubiao").show();

    },


    /**
     * 初始化机构树
     */
    initTree: function () {
        var tree_setting = {
            check: {
                enable: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            edit: {
                enable: true, //设置此属性后，节点可拖拽
                showRenameBtn: false, // 设置隐藏编辑按钮
                showRemoveBtn: false, //设置隐藏删除按钮
                drag: {
                    prev: false,
                    next: false,
                    autoOpenTime: 0, //拖拽时父节点自动展开的延时间隔
                },
            },
            callback: {
                onClick: function (event, treeId, treeNode) {
                    //var nodeid = treeNode.id;
                    var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
                    var nodes = zTree.getSelectedNodes();
                    var nodeid = nodes[0].id;
                    var nodename = nodes[0].name;
                    if (nodeid == "0") {
                        zTree.cancelSelectedNode(nodes[0]);
                        $("#deleteB").attr("display", "none");
                        $("#optDiv").hide();
                    } else {
                        $("#optDiv").show();
                        $("#deleteB").attr("display", "block");
                        this.triggerOperation(nodes[0]);
                    }
                }.bind(this),

                beforeClick: function (treeId, treeNode) {
                    if (treeNode.type == "root") {
                        return false;
                    }
                },

                // 根据返回值确定是否允许开启拖拽操作，“应用”、“按钮”节点禁止拖拽
                beforeDrag: function (treeId, treeNodes) {
                    // 拖拽节点为“菜单”时，允许拖拽
                    if (treeNodes[0].level == 2) {
                        return true;
                    } else {
                        return false;
                    }
                },

                // 判断是否允许此拖拽操作,限制只能将“菜单”拖拽至“应用”下
                beforeDrop: function (treeId, treeNodes, targetNode, moveType) {
                    if (targetNode.level == 1) {
                        $.ajax({
                            async: false,
                            type: "POST",
                            url: "/system/core/resource/save",
                            dataType: "application/json",
                            data: {
                                "id": treeNodes[0].id,
                                "name": treeNodes[0].name,
                                "code": treeNodes[0].code,
                                "bizSysId": targetNode.bizsysId,
                                "bizSysName": targetNode.name,
                                "parentId": targetNode.id,
                            },
                            success: function () {
                            },
                        });
                        return true;
                    } else {
                        return false;
                    }
                },


                // 设置不能删除节点
                beforeRemove: function () {
                    return false;
                },

                // 拖拽结束后事件
                onDrop: function (event, treeId, treeNodes, targetNode, moveType) {
                    this.triggerOperation(treeNodes[0]);
                }.bind(this),

            },

            view: {
                fontCss: function (treeId, treeNode) {
                    return (!!treeNode.highlight) ? {color: "blue", "font-weight": "bold"} : {
                        color: "#000",
                        "font-weight": "normal"
                    };
                }
            }
        };

        $.ajax({
            cache: false,
            async: false,// 同步加载
            type: "POST",
            url: this.options.findTree,
            dataType: "json",
            success: function (data) {
                $.fn.zTree.init($('#' + this.options.treeId),
                    tree_setting, data.data);
                var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);


                var root = zTree.getNodeByParam("id", "0");
                var nodes = zTree.getNodesByParam("type", "bizsys", root);
                zTree.selectNode(nodes[0], false);

                this.triggerOperation(nodes[0]);

                zTree.expandNode(root, true, false, false);  //默认展开第一级
            }.bind(this)
        });
    },


    /*
     * 查找
     * */
    searchZtree: function (element) {
        var treeId = "tree_id";
        var searchConditionId = "txtSearch";
        // this.searchByName(treeId, searchConditionId, "");
        var searchCondition = $('#' + searchConditionId).val();
        var searchObj = {};
        searchObj.treeId = treeId;
        searchObj.condition = searchCondition;
        var nodeObj = this.treeSearchAndExpand(searchObj);
        if (nodeObj) {
            if (nodeObj && nodeObj.id) {
                this.triggerOperation(nodeObj);
            } else {
                layer.msg(`没有查询到指定的资源！`);
            }

        }
    },
    /**
     * 点击树的节点查看机构详情
     */
    triggerOperation: function (node) {
        let nodeid = node.id;
        let type = node.type;
        let tpl = "detail";
        let url = "/system/core/resource/get/" + nodeid;
        if (nodeid == 0) {
            return;
        }
        //$("#getDetail").click();
        //href:/system/organization/edit?type=get&url=/system/core/organization/get/
        if (type == "bizsys" || type == "root") {
            tpl = "bizsys_detail";
            url = "system/core/resource/get/" + nodeid;
        }

        let args = {
            tpl: tpl,
            url: url,
            contentId: "list"
        }
        //suntf20170927   【操作】 详情页面中去掉【新建按钮】
        this.details(args).then(function () {//suntf20170927
            var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
            var checkedNode = zTree.getSelectedNodes();
            if (checkedNode && checkedNode[0] && checkedNode[0].typeplus) {
                let typeplus = checkedNode[0].typeplus;
                /* if(typeplus=="3"){
                 $("#button_add").hide();
                 }*/
                if (typeplus == "1") {
                    $("#qingqiufangfa").hide();
                    $("#ziyuantubiao").show();
                    $("#xianshimubiao").show();
                } else if (typeplus == "2") {
                    $("#ziyuantubiao").hide();
                    $("#qingqiufangfa").show();
                    $("#xianshimubiao").hide();
                } else if (typeplus == "3") {
                    $("#ziyuantubiao").hide();
                    $("#qingqiufangfa").show();
                    $("#xianshimubiao").hide();
                    $("#button_add").hide();
                } else if (typeplus == "4") {
                    $("#ziyuantubiao").show();
                    $("#qingqiufangfa").show();
                    $("#xianshimubiao").show();
                }
            }
        }.bind(this));//查看详情页面
    },

    /**
     * 树状列表查询后展示方法
     *
     * @param searchObj,查询条件对象，内部含有treeId和condition属性。treeId树ID，condition是查询条件，树状列表上部查询框提供的节点名称查询条件
     * @returns
     */
    treeSearchAndExpand: function (searchObj) {
        var treeObj = $.fn.zTree.getZTreeObj(searchObj.treeId);
        // <1>. 先把全部节点更新为普通样式
        var treeNodes = treeObj.transformToArray(treeObj.getNodes());
        for (var i = 0; i < treeNodes.length; i++) {
            treeNodes[i].highlight = false;
            treeObj.updateNode(treeNodes[i]);
        }
        // <2>.得到模糊匹配搜索条件的节点数组集合
        var highlightNodes = new Array();

        if (searchObj.condition != "") {
            highlightNodes = treeObj.getNodesByParamFuzzy("name", searchObj.condition, null);
        } else {
            return;
        }
        // <3>.高亮显示并展示【指定节点s】
        var nodeObj = {};
        if (highlightNodes != null && highlightNodes.length > 0) {
            treeObj.cancelSelectedNode();
            var first = true;
            for (var i = 0; i < highlightNodes.length; i++) {
                if (searchObj.type && searchObj.type.indexOf(highlightNodes[i].type) < 0) {
                    continue;
                }
                // treeObj.selectNode(highlightNodes[i], true);
                highlightNodes[i].highlight = true;
                if (first) {
                    nodeObj = highlightNodes[i];
                    treeObj.selectNode(highlightNodes[i], true);
                    first = false;
                }
                treeObj.updateNode(highlightNodes[i]);// 级联选中
                treeObj.expandNode(highlightNodes[i].getParentNode(), true);
            }
        }
        return nodeObj;
    },

    judge: function () {
        let type = $("#selType").val();
        if (type == "1") {
            $("#qingqiufangfa").hide();
            $("#ziyuantubiao").show();
            $("#xianshimubiao").show();
        } else if (type == "2") {
            $("#ziyuantubiao").hide();
            $("#qingqiufangfa").show();
            $("#xianshimubiao").hide();
        } else if (type == "3") {
            $("#ziyuantubiao").hide();
            $("#qingqiufangfa").show();
            $("#xianshimubiao").hide();
        } else if (type == "4") {
            $("#ziyuantubiao").show();
            $("#qingqiufangfa").show();
            $("#xianshimubiao").show();
        }
    },


    /*
     * 删除组织机构重写dialog
     * 20170925
     * */
    /**
     * 弹出信息框
     * @param args
     * {dialog:confirm,type:post-(默认),isReload:true-(默认),url:/demo/mybatisuser/pages-(可选)}
     */
    dialog(args) {
        let promise = null;
        switch (args.dialog) {
            case 'confirm':
                layer.confirm('你确定要执行此操作吗？', {
                    btn: ['确定', '取消'] //按钮
                }, function () {
                    layer.closeAll();
                    promise = this.ajaxResource(args).then(function (data) {
                        var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
                        var nodes = zTree.getSelectedNodes();
                        var parentNode = nodes[0].getParentNode();
                        var nodeid = parentNode.id;
                        this.initTree();
                        zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
                        var node = zTree.getNodeByParam("id", nodeid);
                        zTree.selectNode(node, false);//选择节点
                        zTree.expandNode(node, true, false, false);
                        /*  this.triggerOperation(node.id);*///查看详情
                    }.bind(this));

                }.bind(this), function () {
                    layer.closeAll()
                });
                break;
            default:  //设置shade,zIndex解决附件上传对话框弹出遮罩层的问题，修改人lvhuwei
                let layerId = layer.open({
                    shade: 0,
                    zIndex: 1,
                    type: 1,
                    move: args.move,
                    title: args.title || '信息',
                    area: [args.width || '800px', args.height || '600px'] //宽高
                });
                args.contentId = $('#layui-layer' + layerId).find('.layui-layer-content');
                promise = this.render(args);
                break;
        }
        return promise;
    },

    /**
     * 编辑界面中更改上级资源时，表单中的bissysId做相应修改
     *
     */
    selectOnChange: function () {
        var id = $("#parentId").val();
        $.ajax({
            type: "GET",
            url: "system/core/resource/get/" + id,
            dataType: "json",
            success: function (datas) {
                $("#bizSysId").val(datas.data.res.bizSysId);
            }
        });
    }

});



