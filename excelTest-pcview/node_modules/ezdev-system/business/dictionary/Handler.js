/**
 * Created by xiehao on 2016/7/19.
 * --------------------
 * - 字典模块 -
 * --------------------
 * 实现用户的管理功能。
 */
import eventUtils from "ezdev-pcview/utils/EvenUtils";
import Handler from "ezdev-pcview/handler/Handler";
import ajaxRequest from "ezdev-pcview/ajax/AjaxRequest";
import config from "ezdev-pcview/Config";
import Table from "ezdev-pcview/components/table/Table";

export default new Handler({
    //ajaxBasePath: "/system",
    resolveTpl: function (tpl) {
        return require("./tpl/" + tpl + ".html");
    },

    seeChildDic: function (args) {
        $("#searchForm #zdpid").val(args.objid);//为zdpid赋值
        $("#add").attr("e-router", function (index, old) {
            if (old.indexOf("Child") > -1) {
                return old;
            }
            return old + "Child";
        })
        this.search(args);
        $("#goBackButton").show();
    },
    onIndexed: function (args) {
        $("#goBackButton").hide();
    },
    /*
     * 点开父字典后，添加子字典调用方法。
     * */
    addChild: function (args) {
        var pid = $("#searchForm #zdpid").val();
        this.add(args);
        $("[name='parentid']").val(pid);//存parentid
        $("[name='code']").attr("ajaxurl", function (index, old) {
            var parentidIndex = old.indexOf("parentid=");
            var pp = old.substring(0, parentidIndex + 9);
            return pp + pid + "&id=";
        });//存parentid
    },
    /*
     * 子节点 【返回】按钮方法
     * */
    goBackB: function (args) {
        $("#searchForm #zdpid").val(0);
        this.search(args);
        $("#goBackButton").hide();
    },


    getChildDic: function (args) {
        let itemId = args.itemId;
        args.data = {"parentid": itemId};
        this.render(args);
    },

    addDic: function (args) {
        let parentId = $("#parentId").val();
        if (args.tpl) {
            args.data = {"parentid": parentId};
            args.type = args.type || 'get';
            this.render(args);
        } else {
            throw new Error(
                "参数无效，请传递如" +
                "{tpl:demo/user/list-(必选)," +
                "contentId:pageList-(默认)" +
                "}的JS对象"
            );
        }
    },
    sortUp: function (args) {
        let $tr = eventUtils.getCurrentEventTarget().parents("tr");
        if ($tr.index() !== 0) {
            let pre = $tr.prev();
            let itemId = pre.children('.itemId').val();

            $tr.fadeOut().fadeIn();
            pre.before($tr);
            ajaxRequest.ajax({
                type: "post",
                url: this.ajaxBasePath ? this.ajaxBasePath + args.url : args.url,
                data: {"id": args.id, "swapId": itemId}
            });
        }
    },
    sortDown: function (args) {
        let len = $("#example2 tr").length;
        let $tr = eventUtils.getCurrentEventTarget().parents("tr");
        //console.log('$tr.index()==='+$tr.index());
        //console.log(" len=="+len );
        //console.log(" len - 2=="+(len - 2));
        if ($tr.index() !== (len - 2)) {
            $tr.fadeOut().fadeIn();
            let next = $tr.next();
            let itemId = next.children('.itemId').val();
            //console.log('itemId==='+itemId);
            if (typeof(itemId) === 'undefined' || itemId === null) {
                return;
            }
            $tr.next().after($tr);
            ajaxRequest.ajax({
                type: "post",
                url: this.ajaxBasePath ? this.ajaxBasePath + args.url : args.url,
                data: {"id": args.id, "swapId": itemId}
            });
        }
    },
    sortTop: function (args) {
        let $tr = eventUtils.getCurrentEventTarget().parents("tr");
        $tr.fadeOut().fadeIn();
        $("#example2").prepend($tr);
        $tr.css("color", "#f60");
        //let that = this;
        ajaxRequest.ajax({
            type: "post",
            url: this.ajaxBasePath ? this.ajaxBasePath + args.url : args.url,
            data: {"id": args.id}
        }).then(function (data) {
            //let item = $('#' + config.options.contentId + ' [e-handle*="search"]');
            //that.search(utils.getJsonByAttr(item), item);
        });
    },
    save: function (args) {
        let that = this;
        let span = $("#bmspan").html();
        if (span == "同级字典编码已存在") {
            return;
        }
        this.submit(args);

    },

    search: function (args) {
        //处理多DIV容器支持
        args.form = args.form || this.getContainerId('searchForm');

        if (args.url) {

            //处理多DIV容器支持
            args.contentId = args.contentId || this.getContainerId(config.listId);

            let form = $(`#${args.form}`);
            if (form.length > 0) {
                args.data = form.serialize();

                if (args.tpl == "children/list") {

                    let id = $("input[id='parentId']").val();
                    let search_LIKE_name = $("input[name='search_LIKE_name']").val();

                    args.data = {
                        "search_EQ_parentDic.id": id,
                        "search_LIKE_name": search_LIKE_name,
                        "sortType": "sortNo",
                        "pageSize": "1000"
                    }
                }

                args.tpl = args.tpl || config.listTpl;

                return this.render(args).then(function (data) {
                    new Table({
                        pageID: this.getContainerId('pager'),
                        sortID: this.getContainerId('sort'),
                        pageNum: data.data.pageNum,
                        totalPages: data.data.totalPages,
                        totalSize: data.data.totalSize,
                        pageSize: data.data.pageSize,
                        buttonClickCallback: this.search.bind(this, args)
                    });
                }.bind(this));
            } else {
                throw new Error("参数无效，DOM中无法找到id为[" + args.form + "]的Form！");
            }

        } else {
            throw new Error("参数无效，请传递如{url:/demo/mybatisuser/pages-(必选),type:post-(默认),tpl:list-(默认),contentId:list-(默认)}的JS对象");
        }

    }

});