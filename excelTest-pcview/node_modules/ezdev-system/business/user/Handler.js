/**
 * Created by dongyue on 2017/5/6.
 * 演示Handler应用
 */
import Handler from "ezdev-pcview/handler/Handler";
import EAttach from "../../common/layout/navbars/user/EAttach";

let orgId = "root";

export default new Handler({
    options1: function () {
        this.options = {
            treeId: 'orgTree',
            formId: 'form',
            listId: 'list',
            pageId: 'pager',
            findTree: "system/core/organization/list",
            getTree: "system/core/user/list",
            contentId: 'content',
            rescTreeid: 'rescTree',
            rescTreeUrl: 'core/resource/list',
            roleListId: 'rolelistbind',
            roleListUrl: 'core/role/list',
            map: {},
            selectedNode: {},//selectedNode
            ifAdd: ''
        };
        return this;
    },

    resolveTpl: function (tpl) {
        return require("./tpl/" + tpl + ".html");
    },
    initialize: function (options) {
        this.setOptions(options);
        this.addEvent("inited", this.initTree);
    },
    onIndexed: function () {
        /*20170926suntf*/
        var treeObj = $.fn.zTree.getZTreeObj("orgTree");
        if (treeObj != null && treeObj != undefined && treeObj != "undefined") {
            var node = treeObj.getSelectedNodes();
            //this.options.selectedNode=node[0].id;//20170926suntf
            console.log(node[0].id);
        }
        if (window.location.href.indexOf("?") == -1) {
            this.options.selectedNode.id = "root"
            this.initTree();
        } else {
            this.initTree();
        }
        if ($("#add").css('display') == 'none') {
            this.options.ifAdd = '1';
        } else {
            this.options.ifAdd = '0';
        }


        // let percentage = 10;
        // let interval = 1000;
        // let ajaxUrl = "system/batch/user/progressinfo";
        // setInterval(function () {
        //     /*
        //     percentage =  percentage+10;
        //     $("#progressbar").css("width",percentage+"%");
        //     if(percentage > 100){
        //         percentage = 0;
        //     }
        //     */
        //     $.ajax({
        //         cache: false,
        //         type: "POST",
        //         url: this.options.findTree,
        //         dataType: "json",
        //         success: function (data) {
        //             $.fn.zTree.init($('#' + this.options.treeId), this.ztreeEditSetting(), data.data);
        //             var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
        //             let nodeId="root";
        //             let orgCode=$("#orgCode").val();
        //             if(orgCode!=""){
        //                 nodeId=orgCode;
        //             }
        //             var node = zTree.getNodeByParam("id", nodeId);
        //             if(this.options.selectedNode){
        //                 this.options.selectedNode=node;
        //             }
        //             var selectNode = zTree.getNodeByParam("id", nodeId);
        //             zTree.selectNode(selectNode, false);
        //             zTree.expandNode(selectNode, true, false, false);
        //
        //         }.bind(this)
        //     });
        // },1000);

    },
    onEdited: function (args) {
        this.initEditTree();
    },
    /**
     * Index页面组织树初始化
     */
    initTree: function () {
        //this.options1();
        $.ajax({
            cache: false,
            type: "POST",
            url: this.options.findTree,
            dataType: "json",
            success: function (data) {

                $.fn.zTree.init($('#' + this.options.treeId), this.ztreeSetting(), data.data);
                var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
                let nodeId = "root";
                if (this.options.selectedNode && this.options.selectedNode.id && this.options.selectedNode.id != "") {
                    nodeId = this.options.selectedNode.id;
                }
                var node = zTree.getNodeByParam("id", nodeId);
                zTree.selectNode(node, false);
                //zTree.expandAll(true);
                zTree.expandNode(node, true, false, false);  //默认展开第一级
                this.ztreeClick(node);
            }.bind(this)
        });
    },

    /**
     * 组织机构树配置
     */
    ztreeSetting: function () {
        //this.options1();
        return {
            check: {
                enable: false
            },
            view: {
                selectedMulti: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                onClick: function (event, treeId, treeNode) {
                    orgId = treeNode.id;

                    treeNode.id == "root" ? $("#orgPath").val("") : $("#orgPath").val("#" + treeNode.id);
                    $("#orgName").val(treeNode.name);
                    var childTree = {};
                    childTree.url = "/system/core/user/list";
                    childTree.contentId = "list";
                    // this.search($('#' + this.options.contentId + ' [operation="search"]'));
                    this.search(childTree);
                    this.showOrgInfo(orgId);
                    $("#add").attr("e-router", "href:/system/user/add?orgId=" + treeNode.id + "&orgName=" + treeNode.name);
                    if (this.options.ifAdd == '0') {
                        if (treeNode.id == "root") {
                            $("#add").hide();
                        } else {
                            $("#add").show();
                        }
                    }
                }.bind(this)
            },
            view: {
                fontCss: function (treeId, treeNode) {
                    return (!!treeNode.highlight) ? {color: "blue", "font-weight": "bold"} : {
                        color: "#000",
                        "font-weight": "normal"
                    };
                }
            }
        };
    },
    ztreeClick: function (treeNode) {
        treeNode.id == "root" ? $("#orgPath").val("") : $("#orgPath").val("#" + treeNode.id);
        $("#orgName").val(treeNode.name);
        var childTree = {};
        childTree.url = "/system/core/user/list";
        childTree.contentId = "list";
        // this.search($('#' + this.options.contentId + ' [operation="search"]'));
        this.search(childTree);
        this.showOrgInfo(treeNode.id);
        $("#add").attr("e-router", "href:/system/user/add?orgId=" + treeNode.id + "&orgName=" + treeNode.name);
        if (this.options.ifAdd == '0') {
            if (treeNode.id == "root") {
                $("#add").hide();
            } else {
                $("#add").show();
            }
        }
    },
    /**
     * Edit页面点击ztree的操作
     * @returns {{check: {enable: boolean}, view: {selectedMulti: boolean}, data: {simpleData: {enable: boolean}}, callback: {onClick: *}, view: {selectedMulti: boolean}}}
     */
    ztreeEditSetting: function () {
        //this.options1();
        return {
            check: {
                enable: false
            },
            view: {
                selectedMulti: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                onClick: function (event, treeId, treeNode) {
                    var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
                    $("[name = 'orgId']").val(treeNode.id);
                    $("#orgName").val(treeNode.name);
                    this.options.selectedNode = treeNode;
                    var selectNode = zTree.getNodeByParam("id", treeNode.id);
                    zTree.selectNode(selectNode, false);
                    zTree.expandNode(selectNode, true, false, false);  //默认展开root
                }.bind(this)
            },
            view: {
                fontCss: function (treeId, treeNode) {
                    return (!!treeNode.highlight) ? {color: "blue", "font-weight": "bold"} : {
                        color: "#000",
                        "font-weight": "normal"
                    };
                }
            }
        };
    },

    /**
     * Edit页面组织树初始化
     */
    initEditTree: function () {
        $.ajax({
            cache: false,
            type: "POST",
            url: this.options.findTree,
            dataType: "json",
            success: function (data) {
                $.fn.zTree.init($('#' + this.options.treeId), this.ztreeEditSetting(), data.data);
                var zTree = $.fn.zTree.getZTreeObj(this.options.treeId);
                let nodeId = "root";
                let orgCode = $("#orgCode").val();
                if (orgCode != "") {
                    nodeId = orgCode;
                }
                var node = zTree.getNodeByParam("id", nodeId);
                if (this.options.selectedNode) {
                    this.options.selectedNode = node;
                }
                var selectNode = zTree.getNodeByParam("id", nodeId);
                zTree.selectNode(selectNode, false);
                zTree.expandNode(selectNode, true, false, false);

            }.bind(this)
        });
    },

    /**
     * 新建用户
     * @author dongyue
     */
    onAdded: function (args) {
        $("#orgName").attr("readonly", true);
        $("#orgId").val(args.args.orgId);
        $("#orgCode").val(args.args.orgId);
        $("#orgName").val(args.args.orgName);
    },
    initHandler: function () {
        this.options1();
    },

    onSubmited: function (args) {
        if ($('.Validform_wrong').length > 0) {
            return
        }
        var orgId = $('#orgCode').val();
        window.location.href = '#/system/user/index?=' + orgId + '_' + Math.random();
        this.options.selectedNode.id = orgId;
    },
    onGoBacked: function () {
        var orgId = $('#orgCode').val();
        window.location.href = '#/system/user/index?=' + orgId + '_' + Math.random();
        this.options.selectedNode.id = orgId;
    },
    batchAdd: function (args) {// 批量用户导入
        this.layerId = layer.open({
            type: 1,
            move: args.move,
            title: args.title || '批量导入',
            area: [args.width || '800px', args.height || '600px'] //宽高
        });

        args.contentId = $('#layui-layer' + this.layerId).find('.layui-layer-content');
        var that = this;
        this.render(args).then(function () {
            var atcArgs = {
                el: '#batchEtach'
                , domopt: "append"
                , suffix: "xls,xlsx"
                , limit: '3'
                , single: 'true'
                , uploadUrl: 'system/batch/user/upload'
                , uploadSuc: function (file) {
                    layer.closeAll();
                    that.checkProgress();
                }
            };
            let attach = new EAttach();
            attach.reWriteHtml(atcArgs);

        });

    },
    checkProgress: function () {
        var that = this;
        var args = {
            url: "/system/batch/user/checkProgress",
            type: "POST"
        };
        var num = window.setInterval(function () {

            that.ajaxResource(args).then(function (data) {
                var flag = false;
                for (var i = 0; i < data.data.length; i++) {
                    var batchImport = data.data[i];
                    var id = batchImport.id;
                    if ((batchImport.errorCount + batchImport.readCount) != batchImport.recordTotalCount) {
                        flag = true;
                    } else {
                        var tArgs = {
                            url: "/system/batch/user/deleteUserBatchImport/" + id,
                            type: "GET"
                        }
                        that.ajaxResource(tArgs);
                    }
                }
                if (flag) {
                    $("#batch_info").show();
                } else {
                    $("#batch_info").hide();
                    layer.msg("处理完成");
                    clearInterval(num);
                    that.reload();
                }
            });
        }, 1000);
    },
    /**
     * 做标记处理，如标记为领导
     * @param args
     */
    doflag: function (args) {
        args.data = {orgId: orgId};
        this.ajaxResource(args).then(() => {
            this.reload();
        });
    },

    showOrgInfo: function (orgId) {
        /*
        this.ajaxResource({
            url: `/system/core/user/getOrg/${orgId}`,
            type: "get"
        }).then((data) => {
            if (data.data && data.data.name) {
                $("#org-info-show").text(`当前组织领导为：` + data.data.name);
            }else{
                $("#org-info-show").text("");
            }

        });
        */
    },

    delete(args) {

        let layerid=layer.confirm('你确定要执行此操作吗？', {
            btn: ['确定', '取消'] //按钮
        }, function () {
            layer.close(layerid);
            promise = this.ajaxResource(args).then(() => {
                //刷新查询页面
                this.search({url:'/system/core/user/list',auto:true});
            });

        }.bind(this), function () {
            layer.close(layerid);
        });
    }
});























